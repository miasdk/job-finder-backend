# Generated by Django 4.2.7 on 2025-07-22 20:38

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('jobs', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Mia Elena', max_length=100)),
                ('email', models.EmailField(default='miariccidev@gmail.com', max_length=254)),
                ('skills', models.JSONField(default=list, help_text='List of technical skills')),
                ('experience_levels', models.JSONField(default=list, help_text='Preferred experience levels: entry, junior, mid, senior')),
                ('min_experience_years', models.IntegerField(default=0)),
                ('max_experience_years', models.IntegerField(default=3)),
                ('preferred_locations', models.JSONField(default=list, help_text='List of preferred locations/cities')),
                ('location_types', models.JSONField(default=list, help_text='Preferred work types: remote, hybrid, onsite')),
                ('min_salary', models.IntegerField(default=70000)),
                ('max_salary', models.IntegerField(default=120000)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('job_titles', models.JSONField(default=list, help_text='Target job titles to search for')),
                ('preferred_companies', models.JSONField(default=list, help_text='Preferred company types: startup, enterprise, tech, etc.')),
                ('skills_weight', models.FloatField(default=45.0, help_text='Weight for skills matching (0-100)')),
                ('experience_weight', models.FloatField(default=25.0, help_text='Weight for experience matching (0-100)')),
                ('location_weight', models.FloatField(default=15.0, help_text='Weight for location preference (0-100)')),
                ('salary_weight', models.FloatField(default=10.0, help_text='Weight for salary matching (0-100)')),
                ('company_weight', models.FloatField(default=5.0, help_text='Weight for company type (0-100)')),
                ('email_enabled', models.BooleanField(default=True)),
                ('email_frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('bi_weekly', 'Bi-weekly')], default='daily', max_length=20)),
                ('email_time', models.TimeField(default='19:00', help_text='Time to send daily emails (EST)')),
                ('auto_scrape_enabled', models.BooleanField(default=True)),
                ('scrape_frequency_hours', models.IntegerField(default=24, help_text='Hours between scraping runs')),
                ('min_job_score_threshold', models.FloatField(default=50.0, help_text='Only save jobs above this score')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'User Preferences',
                'verbose_name_plural': 'User Preferences',
                'ordering': ['-updated_at'],
            },
        ),
    ]
