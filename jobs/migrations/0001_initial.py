# Generated by Django 4.2.7 on 2025-07-22 07:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('website', models.URLField(blank=True, null=True)),
                ('industry', models.CharField(blank=True, max_length=100)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('company_size', models.CharField(blank=True, max_length=50)),
                ('company_type', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('description', models.TextField()),
                ('requirements', models.TextField(blank=True)),
                ('benefits', models.TextField(blank=True)),
                ('location', models.CharField(max_length=200)),
                ('location_type', models.CharField(choices=[('remote', 'Remote'), ('onsite', 'On-site'), ('hybrid', 'Hybrid')], default='onsite', max_length=20)),
                ('employment_type', models.CharField(choices=[('full_time', 'Full-time'), ('part_time', 'Part-time'), ('contract', 'Contract'), ('contract_to_hire', 'Contract-to-hire'), ('internship', 'Internship'), ('temporary', 'Temporary')], default='full_time', max_length=20)),
                ('experience_level', models.CharField(choices=[('entry', 'Entry Level'), ('junior', 'Junior'), ('mid', 'Mid Level'), ('senior', 'Senior'), ('lead', 'Lead'), ('manager', 'Manager')], default='entry', max_length=20)),
                ('salary_min', models.IntegerField(blank=True, null=True)),
                ('salary_max', models.IntegerField(blank=True, null=True)),
                ('salary_currency', models.CharField(default='USD', max_length=10)),
                ('source', models.CharField(max_length=100)),
                ('source_url', models.URLField(unique=True)),
                ('source_job_id', models.CharField(blank=True, max_length=200)),
                ('required_skills', models.JSONField(default=list)),
                ('preferred_skills', models.JSONField(default=list)),
                ('keywords', models.JSONField(default=list)),
                ('posted_date', models.DateTimeField(blank=True, null=True)),
                ('scraped_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_entry_level_friendly', models.BooleanField(default=False)),
                ('requires_degree', models.BooleanField(default=False)),
                ('offers_visa_sponsorship', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='jobs.company')),
            ],
            options={
                'ordering': ['-posted_date', '-scraped_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailDigest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('recipient_email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=200)),
                ('jobs_count', models.IntegerField(default=0)),
                ('top_score', models.FloatField(default=0)),
                ('email_sent_successfully', models.BooleanField(default=False)),
                ('jobs_included', models.ManyToManyField(related_name='email_digests', to='jobs.job')),
            ],
            options={
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='JobScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skills_match_score', models.FloatField(default=0)),
                ('experience_match_score', models.FloatField(default=0)),
                ('location_preference_score', models.FloatField(default=0)),
                ('salary_match_score', models.FloatField(default=0)),
                ('company_type_score', models.FloatField(default=0)),
                ('total_score', models.FloatField(default=0)),
                ('matching_skills', models.JSONField(default=list)),
                ('missing_skills', models.JSONField(default=list)),
                ('meets_minimum_requirements', models.BooleanField(default=False)),
                ('recommended_for_application', models.BooleanField(default=False)),
                ('scored_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='score', to='jobs.job')),
            ],
            options={
                'ordering': ['-total_score'],
                'indexes': [models.Index(fields=['total_score'], name='jobs_jobsco_total_s_930f08_idx'), models.Index(fields=['recommended_for_application'], name='jobs_jobsco_recomme_692204_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['source', 'scraped_at'], name='jobs_job_source_3abeab_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['location_type'], name='jobs_job_locatio_e9364c_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['experience_level'], name='jobs_job_experie_09027f_idx'),
        ),
        migrations.AddIndex(
            model_name='job',
            index=models.Index(fields=['is_active'], name='jobs_job_is_acti_b6ae73_idx'),
        ),
    ]
